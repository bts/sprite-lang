elaborate: ([("fv##0",TBase TInt (Known "VV" (and (true))))],ELet (Rec (Bind "sumAcc" ()) (EAnn (EFun (Bind "total" ()) (EFun (Bind "n" ()) (ELet (Let (Bind "cond" ()) (EApp (EApp (EImm (ECon (PBin BLe) ()) ()) (EVar "n" ()) ()) (ECon (PInt 0) ()) ()) ()) (EIf (EVar "cond" ()) (EImm (EVar "total" ()) ()) (ELet (Let (Bind "n1" ()) (EApp (EApp (EImm (ECon (PBin BMinus) ()) ()) (EVar "n" ()) ()) (ECon (PInt 1) ()) ()) ()) (ELet (Let (Bind "tot1" ()) (EApp (EApp (EImm (ECon (PBin BPlus) ()) ()) (EVar "total" ()) ()) (EVar "n" ()) ()) ()) (EApp (EApp (EImm (EVar "sumAcc" ()) ()) (EVar "tot1" ()) ()) (EVar "n1" ()) ()) ()) ()) ()) ()) ()) ()) Val ("sumAcc",TFun "total" (TBase TInt (Known "VV" (and (true)))) (TFun "n" (TBase TInt (Known "VV" (and (true)))) (TBase TInt (Known "VV" (and (true))))),Just [EVar "total"]) ()) ()) (EImm (ECon (PInt 0) ()) ()) (),ELet (Rec (Bind "sumAcc" ()) (EAnn (EFun (Bind "total" ()) (EFun (Bind "n" ()) (ELet (Let (Bind "cond" ()) (EApp (EApp (ETApp (EImm (ECon (PBin BLe) ()) ()) (TBase TInt (Known "VV" (and (true)))) ()) (EVar "n" ()) ()) (ECon (PInt 0) ()) ()) ()) (EIf (EVar "cond" ()) (EImm (EVar "total" ()) ()) (ELet (Let (Bind "n1" ()) (EApp (EApp (EImm (ECon (PBin BMinus) ()) ()) (EVar "n" ()) ()) (ECon (PInt 1) ()) ()) ()) (ELet (Let (Bind "tot1" ()) (EApp (EApp (EImm (ECon (PBin BPlus) ()) ()) (EVar "total" ()) ()) (EVar "n" ()) ()) ()) (EApp (EApp (EImm (EVar "sumAcc" ()) ()) (EVar "tot1" ()) ()) (EVar "n1" ()) ()) ()) ()) ()) ()) ()) ()) Val ("sumAcc",TFun "total" (TBase TInt (Known "VV" (and (true)))) (TFun "n" (TBase TInt (Known "VV" (and (true)))) (TBase TInt (Known "VV" (and (true))))),Just [EVar "total"]) ()) ()) (EImm (ECon (PInt 0) ()) ()) ())

Trace: [data-typs] : []
Just (forall ((n int) (and (true)))
      (forall ((total int) (and (true)))
       (and
        (and
         (forall ((VV int) (and (and (true)) (VV == n)))
          (and
           ((k_##1 VV n total))
           ((true))))
         (forall ((VV int) (VV == 0))
          (and
           ((k_##1 VV n total))
           ((true)))))
        (forall ((cond bool) (and (cond <=> n <= 0)))
         (forall ((lq_tmp$grd##8 bool) (not cond))
          (forall ((n1 int) (and (n1 == n - 1)))
           (forall ((tot1 int) (and (tot1 == total + n)))
            (forall ((v int) (and (and (v == total + n)) (v == tot1)))
             (and
              ((true))
              (((0 <= v
                 && v < total))))))))))))
Saving Binary Query: ./.liquid/out.bfq

Saving Text Query: ./.liquid/out.fq

Saving Solution: ./.liquid/out.fqout

[1;91mUnsafe
[0mErrors found!

sumAcc.re:9:12-9:16: Subtype error
 
 
         9|      sumAcc(tot1, n1)
                        ^^^^^

