// Config {srcFile = "out", cores = Nothing, minPartSize = 500, maxPartSize = 700, solver = z3, linear = False, stringTheory = False, defunction = False, allowHO = False, allowHOqs = False, eliminate = some, elimBound = Nothing, smtTimeout = Nothing, elimStats = False, solverStats = False, metadata = False, stats = False, parts = False, save = True, minimize = False, minimizeQs = False, minimizeKs = False, minimalSol = False, etaElim = False, gradual = False, ginteractive = False, autoKuts = False, nonLinCuts = False, noslice = False, rewriteAxioms = True, oldPLE = False, noIncrPle = False, checkCstr = [], extensionality = False, maxRWOrderingConstraints = Nothing, rwTerminationCheck = False}


data list 1 = [
       | Nil {}
       | Cons {Cons##0 : @(0), Cons##1 : (list @(0))}
     ]


expand [1 : True;
        2 : True;
        3 : True;
        4 : True;
        5 : True;
        6 : True;
        7 : True]
rewrite  []


qualif PApp1(VV : @(0), p : (Pred @(0))): ((papp1 p VV)) // SourcePos {sourceName = "pappQual", sourceLine = Pos 1, sourceColumn = Pos 1}
qualif PApp2(VV : @(1), x0 : @(0), p : (Pred @(0) @(1))): ((papp2 p x0 VV)) // SourcePos {sourceName = "pappQual", sourceLine = Pos 1, sourceColumn = Pos 1}
qualif PApp3(VV : @(2), x0 : @(0), x1 : @(1), p : (Pred @(0) @(1) @(2))): ((papp3 p x0 x1 VV)) // SourcePos {sourceName = "pappQual", sourceLine = Pos 1, sourceColumn = Pos 1}




constant papp3 : (func(3 , [(Pred @(0) @(1) @(2));
                            @(0);
                            @(1);
                            @(2);
                            bool]))
constant papp2 : (func(2 , [(Pred @(0) @(1)); @(0); @(1); bool]))
constant len : (func(1 , [(list @(0)); int]))
constant papp1 : (func(1 , [(Pred @(0)); @(0); bool]))




bind 0 nnf_arg##k_##3##1 : {VV : (list a) | []}
bind 1 nnf_arg##k_##3##2 : {VV : (list a) | []}
bind 2 nnf_arg##k_##3##3 : {VV : (list a) | []}
bind 3 nnf_arg##k_##3##4 : {VV : a | []}
bind 4 nnf_arg##k_##3##5 : {VV : (list a) | []}
bind 5 nnf_arg##k_##1##1 : {VV : (list a) | []}
bind 6 nnf_arg##k_##1##2 : {VV : (list a) | []}
bind 7 nnf_arg##k_##1##3 : {VV : (list a) | []}
bind 8 nnf_arg##k_##1##4 : {VV : a | []}
bind 9 v : {v : (list a) | [((len v) = 0)]}
bind 10 VV : {VV : a | []}
bind 11 x : {x : a | []}
bind 12 xs : {xs : (list a) | [((len xs) >= 0)]}
bind 13 v#1 : {v#1 : (list a) | [((len v#1) = (1 + (len xs)))]}
bind 14 VV#1 : {VV#1 : a | []}
bind 15 xs#1 : {xs#1 : (list a) | [((len xs#1) >= 0)]}
bind 16 ys : {ys : (list a) | [((len ys) >= 0)]}
bind 17 xs#2 : {xs#2 : (list a) | [((len xs#2) = 0);
                                   ((len xs#2) >= 0)]}
bind 18 VV#2 : {VV#2 : (list a) | [(VV#2 = ys); ((len VV#2) >= 0)]}
bind 19 VV#3 : {VV#3 : a | []}
bind 20 x#1 : {x#1 : a | []}
bind 21 xs' : {xs' : (list a) | [((len xs') >= 0)]}
bind 22 xs#3 : {xs#3 : (list a) | [((len xs#3) = (1 + (len xs')));
                                   ((len xs#3) >= 0)]}
bind 23 VV#4 : {VV#4 : (list a) | [(VV#4 = ys); ((len VV#4) >= 0)]}
bind 24 VV#5 : {VV#5 : a | []}
bind 25 VV#6 : {VV#6 : (list a) | [(VV#6 = xs');
                                   ((len VV#6) >= 0)]}
bind 26 VV#7 : {VV#7 : a | []}
bind 27 tl : {tl : (list a) | [((len tl) >= 0)]}
bind 28 VV#8 : {VV#8 : a | [(VV#8 = x#1)]}
bind 29 VV#9 : {VV#9 : (list a) | [(VV#9 = tl); ((len VV#9) >= 0)]}
bind 30 VV##0 : {VV##0 : a | [$k_##1[nnf_arg##k_##1##0:=VV##0][nnf_arg##k_##1##1:=xs#3][nnf_arg##k_##1##2:=xs'][nnf_arg##k_##1##3:=ys][nnf_arg##k_##1##4:=x#1]]}
bind 31 v#2 : {v#2 : (list a) | [((len v#2) = (1 + (len tl)));
                                 ((len v#2) >= 0)]}
bind 32 VV##2 : {VV##2 : a | [$k_##3[nnf_arg##k_##3##0:=VV##2][nnf_arg##k_##3##1:=tl][nnf_arg##k_##3##2:=xs'][nnf_arg##k_##3##3:=ys][nnf_arg##k_##3##4:=x#1][nnf_arg##k_##3##5:=tl]]}
bind 33 VV#10 : {VV#10 : int | [(VV#10 = 0)]}






constraint:
  env [9]
  lhs {v##1 : (list a) | [((len v##1) = 0)]}
  rhs {v##1 : (list a) | [((len v##1) >= 0)]}
  id 1 tag []
  // META constraint id 1 : ()


constraint:
  env [11; 12; 13]
  lhs {v#1##2 : (list a) | [((len v#1##2) = (1 + (len xs)))]}
  rhs {v#1##2 : (list a) | [((len v#1##2) >= 0)]}
  id 2 tag []
  // META constraint id 2 : ()


constraint:
  env [15; 16; 20; 21; 22; 24]
  lhs {VV#5##3 : a | []}
  rhs {VV#5##3 : a | [$k_##1[VV#5:=VV#5##3][nnf_arg##k_##1##0:=VV#5##3][nnf_arg##k_##1##1:=xs#3][nnf_arg##k_##1##2:=xs'][nnf_arg##k_##1##3:=ys][nnf_arg##k_##1##4:=x#1]]}
  id 3 tag []
  // META constraint id 3 : ()


constraint:
  env [15; 16; 20; 21; 22; 25]
  lhs {VV#6##4 : (list a) | [(VV#6##4 = xs'); ((len VV#6##4) >= 0)]}
  rhs {VV#6##4 : (list a) | [(0 <= ((len ys) + (len VV#6##4)));
                             (((len ys) + (len VV#6##4)) < ((len xs#3) + (len ys)))]}
  id 4 tag []
  // META constraint id 4 : ()


constraint:
  env [15; 16; 20; 21; 22; 26]
  lhs {VV#7##5 : a | []}
  rhs {VV#7##5 : a | [$k_##1[VV#7:=VV#7##5][nnf_arg##k_##1##0:=VV#7##5][nnf_arg##k_##1##1:=xs#3][nnf_arg##k_##1##2:=xs'][nnf_arg##k_##1##3:=ys][nnf_arg##k_##1##4:=x#1]]}
  id 5 tag []
  // META constraint id 5 : ()


constraint:
  env [15; 16; 20; 21; 22; 27; 28]
  lhs {VV#8##6 : a | [(VV#8##6 = x#1)]}
  rhs {VV#8##6 : a | [$k_##3[VV#8:=VV#8##6][nnf_arg##k_##3##0:=VV#8##6][nnf_arg##k_##3##1:=xs#3][nnf_arg##k_##3##2:=xs'][nnf_arg##k_##3##3:=ys][nnf_arg##k_##3##4:=x#1][nnf_arg##k_##3##5:=tl]]}
  id 6 tag []
  // META constraint id 6 : ()


constraint:
  env [15; 16; 20; 21; 22; 27; 30]
  lhs {VV##0##7 : a | [$k_##1[VV##0:=VV##0##7][nnf_arg##k_##1##0:=VV##0##7][nnf_arg##k_##1##1:=xs#3][nnf_arg##k_##1##2:=xs'][nnf_arg##k_##1##3:=ys][nnf_arg##k_##1##4:=x#1]]}
  rhs {VV##0##7 : a | [$k_##3[VV##0:=VV##0##7][nnf_arg##k_##3##0:=VV##0##7][nnf_arg##k_##3##1:=xs#3][nnf_arg##k_##3##2:=xs'][nnf_arg##k_##3##3:=ys][nnf_arg##k_##3##4:=x#1][nnf_arg##k_##3##5:=tl]]}
  id 7 tag []
  // META constraint id 7 : ()




wf:
  env [0; 1; 2; 3; 4]
  reft {nnf_arg##k_##3##0 : a | [$k_##3]}
  // META wf : ()


wf:
  env [5; 6; 7; 8]
  reft {nnf_arg##k_##1##0 : a | [$k_##1]}
  // META wf : ()







